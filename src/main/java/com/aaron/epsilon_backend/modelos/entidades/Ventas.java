package com.aaron.epsilon_backend.modelos.entidades;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Ventas generated by hbm2java
 */
@Entity
@Table(name = "ventas")
public class Ventas implements java.io.Serializable {

	private int id;
	private Usuarios usuarioVendedor;
	private Usuarios usuarioComprador;
	private Date fechaVenta;
	private float total;
	private Set<VentasProductos> ventasProductos = new HashSet<VentasProductos>(0);

	public Ventas() {
	}

	public Ventas(int id, Usuarios usuarioVendedor, Usuarios usuarioComprador, Date fechaVenta, float total) {
		this.id = id;
		this.usuarioVendedor = usuarioVendedor;
		this.usuarioComprador = usuarioComprador;
		this.fechaVenta = fechaVenta;
		this.total = total;
	}

	public Ventas(int id, Usuarios usuarioVendedor, Usuarios usuarioComprador, Date fechaVenta, float total,
			Set<VentasProductos> ventasProductos) {
		this.id = id;
		this.usuarioVendedor = usuarioVendedor;
		this.usuarioComprador = usuarioComprador;
		this.fechaVenta = fechaVenta;
		this.total = total;
		this.ventasProductos = ventasProductos;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_vendedor", nullable = false)
	public Usuarios getUsuarioVendedor() {
		return this.usuarioVendedor;
	}

	public void setUsuarioVendedor(Usuarios usuario) {
		this.usuarioVendedor = usuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_comprador", nullable = false)
	public Usuarios getUsuarioComprador() {
		return this.usuarioComprador;
	}

	public void setUsuarioComprador(Usuarios usuario) {
		this.usuarioComprador = usuario;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_venta", nullable = false, length = 13)
	public Date getFechaVenta() {
		return this.fechaVenta;
	}

	public void setFechaVenta(Date fechaVenta) {
		this.fechaVenta = fechaVenta;
	}

	@Column(name = "total", nullable = false, precision = 2, scale = 0)
	public float getTotal() {
		return this.total;
	}

	public void setTotal(float total) {
		this.total = total;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ventas")
	public Set<VentasProductos> getVentasProductos() {
		return this.ventasProductos;
	}

	public void setVentasProductos(Set<VentasProductos> ventasProductos) {
		this.ventasProductos = ventasProductos;
	}

}
